---
# tasks file for firewall
- name: load default variables
  include_vars:
    file: default.yml

- name: load os-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - default.yml

- name: remove conflicting software
  package:
    name: "{{ item }}"
    state: absent
  with_items:
    - "{{ firewall_packages.conflicting }}"
  when:
    - firewall_packages.conflicting is defined

- name: install required software
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ firewall_packages.required }}"
  when:
    - firewall_packages.required is defined

- name: open tcp ports (ufw)
  ufw:
    rule: "{{ item.rule | default('allow') }}"
    port: "{{ item.name }}"
    proto: "{{ item.protocol | default('tcp')}}"
  with_items:
    - "{{ firewall_services }}"
  when:
    - firewall_services is defined
    - firewall_service == "ufw"
    - ansible_virtualization_type != "docker"
  loop_control:
    label: "{{ item.name }}"

- name: enable ufw
  ufw:
    state: enabled
  when:
    - firewall_service == "ufw"
    - ansible_virtualization_type != "docker"

- name: configure iptables
  template:
    src: iptables.j2
    dest: "{{ firewall_iptables_rulefile }}"
  with_items:
    - "{{ firewall_services }}"
  when:
    - firewall_services is defined
    - firewall_service == "iptables"
  loop_control:
    label: "{{ item.name }}"
  notify:
    - reload firewall

- name: start and enable software
  service:
    name: "{{ firewall_service }}"
    state: started
    enabled: true
  when:
    - ansible_virtualization_type != "docker"
    - firewall_service is defined
